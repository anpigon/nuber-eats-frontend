[{"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/client/restaurant.tsx":"1","/Users/anpigon/Study/node/nuber-eats-frontend/src/components/dish.tsx":"2","/Users/anpigon/Study/node/nuber-eats-frontend/src/index.tsx":"3","/Users/anpigon/Study/node/nuber-eats-frontend/src/apollo.ts":"4","/Users/anpigon/Study/node/nuber-eats-frontend/src/__generated__/globalTypes.ts":"5","/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/create-account.tsx":"6","/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/client/restaurants.tsx":"7","/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"8","/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"9","/Users/anpigon/Study/node/nuber-eats-frontend/src/components/restaurant.tsx":"10"},{"size":3441,"mtime":1608866612985,"results":"11","hashOfConfig":"12"},{"size":1714,"mtime":1608866540465,"results":"13","hashOfConfig":"12"},{"size":771,"mtime":1608295635109,"results":"14","hashOfConfig":"12"},{"size":1077,"mtime":1607844016858,"results":"15","hashOfConfig":"12"},{"size":2067,"mtime":1608866629647,"results":"16","hashOfConfig":"12"},{"size":4393,"mtime":1608435720438,"results":"17","hashOfConfig":"12"},{"size":4152,"mtime":1608647047435,"results":"18","hashOfConfig":"12"},{"size":1782,"mtime":1608118135504,"results":"19","hashOfConfig":"12"},{"size":5193,"mtime":1608778149528,"results":"20","hashOfConfig":"12"},{"size":667,"mtime":1608123892213,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"o35tc2",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/client/restaurant.tsx",["44","45"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useParams } from \"react-router-dom\";\nimport { Dish } from \"../../components/dish\";\nimport { RESTAURANT_FRAGMENT, DISH_FRAGMENT } from \"../../fragments\";\nimport { CreateOrderItemInput } from \"../../__generated__/globalTypes\";\nimport {\n  restaurant,\n  restaurantVariables,\n} from \"../../__generated__/restaurant\";\n\nconst RESTAURANT_QUERY = gql`\n  query restaurant($input: RestaurantInput!) {\n    restaurant(input: $input) {\n      ok\n      error\n      restaurant {\n        ...RestaurantParts\n        menu {\n          ...DishParts\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${DISH_FRAGMENT}\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($input: CreateOrderInput!) {\n    createOrder(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface IRestaurantParams {\n  id: string;\n}\n\nexport const Restaurant = () => {\n  const params = useParams<IRestaurantParams>();\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\n    RESTAURANT_QUERY,\n    {\n      variables: {\n        input: {\n          restaurantId: +params.id,\n        },\n      },\n    }\n  );\n\n  const [orderStarted, setOrderStarted] = useState(false);\n  const [orderItems, setOrderItems] = useState<CreateOrderItemInput[]>([]);\n\n  const triggerStartOrder = () => {\n    setOrderStarted(true);\n  };\n\n  const isSelected = (dishId: number) => {\n    return Boolean(orderItems.find((order) => order.dishId === dishId));\n  };\n\n  const addItemToOrder = (dishId: number) => {\n    if (isSelected(dishId)) {\n      return;\n    }\n    setOrderItems((current) => [{ dishId }, ...current]);\n  };\n\n  const removeFromOrder = (dishId: number) => {\n    setOrderItems((current) =>\n      current.filter((dish) => dish.dishId !== dishId)\n    );\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>{data?.restaurant.restaurant?.name || \"\"} | Nuber Eats</title>\n      </Helmet>\n      <div\n        className=\" bg-gray-800 bg-center bg-cover py-48\"\n        style={{\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`,\n        }}\n      >\n        <div className=\"bg-white w-3/12 py-8 pl-48\">\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\n          <h5 className=\"text-sm font-light mb-2\">\n            {data?.restaurant.restaurant?.category?.name}\n          </h5>\n          <h6 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.address}\n          </h6>\n        </div>\n      </div>\n      <div className=\"container pb-32 flex flex-col items-end mt-20\">\n        <button onClick={triggerStartOrder} className=\"btn px-10\">\n          {orderStarted ? \"Ordering\" : \"Start Order\"}\n        </button>\n        <div className=\"w-full grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n          {data?.restaurant.restaurant?.menu.map((dish, index) => (\n            <Dish\n              id={dish.id}\n              orderStarted={orderStarted}\n              addItemToOrder={addItemToOrder}\n              key={index}\n              name={dish.name}\n              description={dish.description}\n              price={dish.price}\n              isCustomer={true}\n              options={dish.options}\n              isSelected={isSelected(dish.id)}\n              removeFromOrder={removeFromOrder}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n",["46","47"],"/Users/anpigon/Study/node/nuber-eats-frontend/src/components/dish.tsx",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/index.tsx",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/apollo.ts",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/create-account.tsx",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/client/restaurants.tsx",["48"],"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/user/confirm-email.tsx",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],"/Users/anpigon/Study/node/nuber-eats-frontend/src/components/restaurant.tsx",[],{"ruleId":"49","severity":1,"message":"50","line":30,"column":7,"nodeType":"51","messageId":"52","endLine":30,"endColumn":28},{"ruleId":"49","severity":1,"message":"53","line":45,"column":11,"nodeType":"51","messageId":"52","endLine":45,"endColumn":18},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"49","severity":1,"message":"58","line":42,"column":26,"nodeType":"51","messageId":"52","endLine":42,"endColumn":31},"@typescript-eslint/no-unused-vars","'CREATE_ORDER_MUTATION' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]